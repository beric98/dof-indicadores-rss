import requests
from datetime import datetime
from xml.etree.ElementTree import Element, SubElement, ElementTree

# Example: fetch data from some API (replace with your actual source)
def fetch_data():
    url = "https://jsonplaceholder.typicode.com/posts"  # Example API
    response = requests.get(url)
    response.raise_for_status()
    return response.json()

def generate_rss(items, output_file="dof_rss.xml"):
    rss = Element("rss", version="2.0")
    channel = SubElement(rss, "channel")
    title = SubElement(channel, "title")
    title.text = "DOF Indicadores"
    link = SubElement(channel, "link")
    link.text = "https://www.dof.gob.mx/"
    description = SubElement(channel, "description")
    description.text = "Actualización diaria de indicadores DOF"
    pubDate = SubElement(channel, "pubDate")
    pubDate.text = datetime.now().strftime('%a, %d %b %Y %H:%M:%S %z')

    # Add items to RSS
    for item in items[:10]:  # Limit to first 10 for this example
        rss_item = SubElement(channel, "item")
        item_title = SubElement(rss_item, "title")
        item_title.text = item.get("title", "Sin título")
        item_link = SubElement(rss_item, "link")
        item_link.text = f"https://www.dof.gob.mx/{item.get('id', '')}"
        item_description = SubElement(rss_item, "description")
        item_description.text = item.get("body", "Sin contenido")
        item_pubDate = SubElement(rss_item, "pubDate")
        item_pubDate.text = datetime.now().strftime('%a, %d %b %Y %H:%M:%S %z')

    # Write RSS to file
    tree = ElementTree(rss)
    tree.write(output_file, encoding="utf-8", xml_declaration=True)

if __name__ == "__main__":
    data = fetch_data()
    generate_rss(data)
